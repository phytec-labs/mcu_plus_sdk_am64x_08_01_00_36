%%{
    let common = system.getScript("/common");
    let soc = system.getScript(`/drivers/soc/drivers_${common.getSocName()}`);
    let driverVer = soc.getDriverVer("mpu_firewall");
    let module = system.modules['/drivers/mpu_firewall/mpu_firewall'];
    let module_reg = system.modules[`/drivers/mpu_firewall/${driverVer}/mpu_firewall_v0_region`];
%%}
/*
 * MPU Firewall
 */
uint32_t gMpuFirewallNumRegions = CONFIG_MPU_FIREWALL_NUM_REGIONS;

MPU_FIREWALL_RegionParams gMpuFirewallRegionConfig[CONFIG_MPU_FIREWALL_NUM_REGIONS] =
{
% for(let i = 0; i < module.$instances.length; i++) {
    % let instance = module.$instances[i];
    % let config = module.getInstanceConfig(instance);
    % let region_instances = instance.mpu_region;
    % for(let reg = 0; reg < region_instances.length; reg++) {
        % let reg_instance = region_instances[reg];
        % let reg_config = module_reg.getInstanceConfig(reg_instance);
    {
            .id = CSL_FW_`config.name.toUpperCase()`_ID,
            .regionNumber = `reg`,
            .startAddress = 0x`reg_config.startAddr.toString(16).toUpperCase()`u,
            %let endAddr = reg_config.startAddr + reg_config.size - 1
            .endAddress   = 0x`endAddr.toString(16).toUpperCase()`u,
            % var permissionConf = reg_config.permissionConfig;
            % var permArray = [];
            % for (let i = 0; i < module_reg.permission_list.length; i++) {
            %     permArray[i] = 0
            % }
            % for (var permissionConfigIndex in permissionConf)
			% {
            %     var name = permissionConf[permissionConfigIndex];
            %     for (var perm_loop in module_reg.permission_list) {
            %         if(name == module_reg.permission_list[perm_loop].name) {
            %             permArray[perm_loop] = 1
            %         }
            %     }
            % }
            % var pos = 0
            .supervisorReadConfig = `permArray[pos++]`,
            .supervisorWriteConfig = `permArray[pos++]`,
            .supervisorExecConfig = `permArray[pos++]`,
            .userReadConfig = `permArray[pos++]`,
            .userWriteConfig = `permArray[pos++]`,
            .userExecConfig = `permArray[pos++]`,
            .nonSecureConfig = `permArray[pos++]`,
            .debugConfig = `permArray[pos++]`,
            % var aidConfigurationOutput = ""
            % var aidConf = reg_config.aidConfig
            % var aidxEnable = 0
            %for (var aidConfigIndex in aidConf)
			%{
            %   var nameId = aidConf[aidConfigIndex];
            %   if(nameId != "AIDX") {
            %       if(aidConfigurationOutput != "") {
            %           aidConfigurationOutput += " | "
            %       }
            %       aidConfigurationOutput += "(0x1<<PRIV_ID_" + nameId + ")"
            %   }
            %   else {
            %       aidxEnable = 1
            % }
            %}
            .aidxConfig = `aidxEnable`,
            .aidConfig = `aidConfigurationOutput`,
    },
    % }
% }
};